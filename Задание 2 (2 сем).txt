/********************************************************************
Автор: Мазанова Ю.Н., ПИ-211                                        *
Задание 2/1: Класс для хранения информации об электронном документе *
********************************************************************/

using System;
using System.Reflection;


namespace ElectronicDocument {
     class LaboratoryWork {
         public struct Denotation {
             public string FileName;
             public string Author;
             public string Keywords;
             public string Subject;
            }
 
  [STAThread]
  static void Main(string[] args) {
     Console.WriteLine("Public:");
         foreach(FieldInfo fi in typeof(Denotation).GetFields() ) {
              Console.WriteLine("\t"+ fi.Name);
            }
     Console.WriteLine("NonPublic:");
         foreach(FieldInfo fi in typeof(Denotation).GetFields(BindingFlags.NonPublic | BindingFlags.Instance) ) {
              Console.WriteLine("\t"+ fi.Name);
            }
        }
    }
}
/********************************************************************************
Автор: Мазанова Ю.Н., ПИ-211                                                    *
Задание 2/2: Классы-наследники для документов MS Word, PDF, MS Excel, TXT, HTML *
*********************************************************************************/
using Inheritance;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace Inheritance
{
    public class ElectronicDocument
    {
        public string FileName { get; set; }
        public string Author { get; set; }
        public string Keywords { get; set; }
        public string Subject { get; set; }
        public string Type { get; protected set; }

        public ElectronicDocument() { }

        public ElectronicDocument(string fileName, string author, string keywords, string subject, string Type)
        {
            FileName = fileName;
            Author = author;
            Keywords = keywords;
            Subject = subject;
        }
        public virtual void Infom()
        {
            Console.WriteLine("ElectronicDocument.Infom");
        }
    }
}

public class MSWord : ElectronicDocument
{
    public MSWord()
    {
    }

    public MSWord(string fileName, string author, string keywords, string subject, string Type)
    {
        FileName = fileName;
        Author = author;
        Keywords = keywords;
        Subject = subject;
    }

    public override void Infom()
    {
        Console.WriteLine("Тип документа: " + Type + "\n" + "Имя файла: " + FileName + "\n" + "Автор: " + Author + "\n" + "Ключевые слова: " + Keywords + "\n" + "Путь к файлу: " + Subject + "\n");
    }
}

public class PDF : ElectronicDocument
{
    public PDF()
    {
    }

    public PDF(string fileName, string author, string keywords, string subject, string Type)
    {
        Type = "PDF";
    }
    public override void Infom()
    {
        Console.WriteLine("Тип документа: " + Type + "\n" + "Имя файла: " + FileName + "\n" + "Автор: " + Author + "\n" + "Ключевые слова: " + Keywords + "\n" + "Путь к файлу: " + Subject + "\n");
    }
}

public class MSExcel : ElectronicDocument
{
    public MSExcel()
    {
    }

    public MSExcel(string fileName, string author, string keywords, string subject, string Type)
    {
        Type = "Microsoft Excel";
    }
    public override void Infom()
    {
        Console.WriteLine("Тип документа: " + Type + "\n" + "Имя файла: " + FileName + "\n" + "Автор: " + Author + "\n" + "Ключевые слова: " + Keywords + "\n" + "Путь к файлу: " + Subject + "\n");
    }
}

public class TXT : ElectronicDocument
{
    public TXT()
    {
    }

    public TXT(string fileName, string author, string keywords, string subject, string Type)
    {
        Type = "TXT";
    }
    public override void Infom()
    {
        Console.WriteLine("Тип документа: " + Type + "\n" + "Имя файла: " + FileName + "\n" + "Автор: " + Author + "\n" + "Ключевые слова: " + Keywords + "\n" + "Путь к файлу: " + Subject + "\n");
    }
}

class Singleton {
    private static Singleton instance;

    public string Name { get; private set; }
    private static object syncRoot = new Object();
   

    public void ShowMenu()
    {

        Console.WriteLine("1 - Doc\n2 -TXTL\n3 - PDF");
        string name = Console.ReadLine();
        ElectronicDocument ED;
        switch (name)
        {
            case "1":
                ED = new MSWord("123","456","79","","");               
                break;
            case "2":
                ED = new TXT();
                break;
            case "3":
                ED = new PDF();
                break;
            default:
                ED = new ElectronicDocument();
                Console.WriteLine("Ошибка");
                break;
        }
        
        ED.Infom();

    }
    /*
    protected HTMLSingleton(string name)
    {
        this.Name = name;
        switch (name)
        {
            case "1":
                Console.WriteLine("Имя файла: ");
                break;
            case "2":
                Console.WriteLine("Автор: ");
                break;
            case "3":
                Console.WriteLine("Ключевые слова: ");
                break;
            default:
                Console.WriteLine("Ошибка");
                break;
        }
    }
    */

    public static Singleton getInstance()
    {
        if (instance == null)
        {
            lock (syncRoot)
            {
                if (instance == null)
                    instance = new Singleton();
            }
        }
        return instance;
    }
}

class Program
{
    private static void InfomElectronicDocument(ElectronicDocument electronicdocument)
    {
        electronicdocument.Infom();
    }
    static void Main(string[] args)
    {

        while (true)
        {
            Singleton.getInstance().ShowMenu();
        }
        /*
        string name = Console.ReadLine();

        switch (name)
        {
            case "Word":
                HTMLSingleton singleton = HTMLSingleton.getInstance(name);
                ElectronicDocument MSW = new MSWord();
                break;
            case "2":
                Console.WriteLine("Автор: ");
                break;
            case "3":
                Console.WriteLine("Ключевые слова: ");
                break;
            default:
                Console.WriteLine("Ошибка");
                break;
        }
        */

      //  HTMLSingleton singleton = HTMLSingleton.getInstance("asdas");
     /*
        ElectronicDocument pdf = new PDF();
        ElectronicDocument MSE = new MSExcel();
        ElectronicDocument txt = new TXT();
       
        
        InfomElectronicDocument(MSW);
        InfomElectronicDocument(pdf);
        InfomElectronicDocument(MSE);
        InfomElectronicDocument(txt);*/
        //Console.ReadKey();
        Console.ReadLine();
    }
}
